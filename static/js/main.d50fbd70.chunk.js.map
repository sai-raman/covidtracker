{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","images/covid.png","App.js","index.js","components/Chart/Chart.module.css","App.module.css","components/CountryPicker/CountryPicker.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","country","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","a","dynamicGetUrl","axios","get","console","log","fetchDailyData","getCountries","countries","map","name","Charts","useState","dailyData","setDailyData","useEffect","fetchApi","lineChart","length","labels","reportDate","datasets","total","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","onCountryChange","fetchedCountries","setFetchedCountries","fetchCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","event","target","i","App","state","covidData","setState","this","image","alt","src","covidImage","Chart","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d50fbd70.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__1xiJS\",\"card\":\"Cards_card__2wHOi\",\"infected\":\"Cards_infected__3AbkX\",\"recovered\":\"Cards_recovered__3kcZa\",\"deaths\":\"Cards_deaths__Z9Ozg\"};","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport styles from './Cards.module.css';\r\nimport cx from 'classnames';\r\n\r\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate }, country }) => {\r\n\tif (!confirmed) {\r\n\t\treturn 'Loading...';\r\n\t}\r\n\treturn (\r\n\t\t<div className={styles.container}>\r\n\t\t\t<Grid container spacing={3} justify=\"center\">\r\n\t\t\t\t<Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t<Typography color=\"textSecondary\" gutterBottom>\r\n\t\t\t\t\t\t\tInfected\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography variant=\"h5\">\r\n\t\t\t\t\t\t\t<CountUp start={0} end={confirmed.value} duration={2.5} separator=\",\" />\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n\t\t\t\t\t\t<Typography variant=\"body2\">No of active cases of COVID-19.</Typography>\r\n\t\t\t\t\t</CardContent>\r\n\t\t\t\t</Grid>\r\n\r\n\t\t\t\t<Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t<Typography color=\"textSecondary\" gutterBottom>\r\n\t\t\t\t\t\t\tRecovered\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography variant=\"h5\">\r\n\t\t\t\t\t\t\t<CountUp start={0} end={recovered.value} duration={2.5} separator=\",\" />\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n\r\n\t\t\t\t\t\t<Typography variant=\"body2\">No of recoveries from COVID-19.</Typography>\r\n\t\t\t\t\t</CardContent>\r\n\t\t\t\t</Grid>\r\n\r\n\t\t\t\t<Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t<Typography color=\"textSecondary\" gutterBottom>\r\n\t\t\t\t\t\t\tDeaths\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography variant=\"h5\">\r\n\t\t\t\t\t\t\t<CountUp start={0} end={deaths.value} duration={2.5} separator=\",\" />\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n\t\t\t\t\t\t<Typography variant=\"body2\">No of deaths cases from COVID-19.</Typography>\r\n\t\t\t\t\t</CardContent>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Cards;\r\n","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) => {\r\n    let dynamicGetUrl = country ? `${url}/countries/${country}` : url;\r\n    try {\r\n        const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(dynamicGetUrl);\r\n        return {\r\n            confirmed,\r\n            recovered,\r\n            deaths,\r\n            lastUpdate\r\n        }\r\n    } catch (error) {\r\n        console.log(error);\r\n\r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async () => {\r\n    try {\r\n        const { data } = await axios.get(`${url}/daily`);\r\n        return data;\r\n    } catch (error) {\r\n        console.log(error);\r\n\r\n    }\r\n}\r\n\r\nexport const getCountries = async () => {\r\n    try {\r\n        const { data: { countries } } = await axios.get(`${url}/countries`);\r\n        return countries.map((country) => country.name);\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { fetchDailyData } from '../../api';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\nimport styles from './Chart.module.css';\r\n\r\nconst Charts = ({ data: { confirmed, recovered, deaths }, country }) => {\r\n\tconst [dailyData, setDailyData] = useState({});\r\n\tuseEffect(() => {\r\n\t\tconst fetchApi = async () => {\r\n\t\t\tsetDailyData(await fetchDailyData());\r\n\t\t};\r\n\t\tfetchApi();\r\n\t}, []);\r\n\tconst lineChart = dailyData.length ? (\r\n\t\t<Line\r\n\t\t\tdata={{\r\n\t\t\t\tlabels: dailyData.map(({ reportDate }) => reportDate),\r\n\t\t\t\tdatasets: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tdata: dailyData.map(({ confirmed }) => confirmed.total),\r\n\t\t\t\t\t\tlabel: 'Infected',\r\n\t\t\t\t\t\tborderColor: '#3333ff',\r\n\t\t\t\t\t\tfill: true,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tdata: dailyData.map(({ deaths }) => deaths.total),\r\n\t\t\t\t\t\tlabel: 'Deaths',\r\n\t\t\t\t\t\tborderColor: 'red',\r\n\t\t\t\t\t\tbackgroundColor: 'rgba(255,0,0,0.5)',\r\n\t\t\t\t\t\tfill: true,\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t}}\r\n\t\t/>\r\n\t) : null;\r\n\r\n\tconst barChart = confirmed ? (\r\n\t\t<Bar\r\n\t\t\tdata={{\r\n\t\t\t\tlabels: ['Infected', 'Recovered', 'Deaths'],\r\n\t\t\t\tdatasets: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: 'People',\r\n\t\t\t\t\t\tbackgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 255, 0.5)'],\r\n\t\t\t\t\t\tdata: [confirmed.value, recovered.value, deaths.value],\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t}}\r\n\t\t\toptions={{\r\n\t\t\t\tlegend: { display: false },\r\n\t\t\t\ttitle: { display: true, text: `Current state in ${country}` },\r\n\t\t\t}}\r\n\t\t/>\r\n\t) : null;\r\n\r\n\treturn country ? (\r\n\t\t<div className={styles.container}>{barChart}</div>\r\n\t) : (\r\n\t\t<div className={styles.container}>{lineChart}</div>\r\n\t);\r\n};\r\n\r\nexport default Charts;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\nimport styles from './CountryPicker.module.css';\r\nimport { getCountries } from '../../api';\r\n\r\nconst CountryPicker = ({ onCountryChange }) => {\r\n\tconst [fetchedCountries, setFetchedCountries] = useState([]);\r\n\tuseEffect(() => {\r\n\t\tconst fetchCountries = async () => {\r\n\t\t\tsetFetchedCountries(await getCountries());\r\n\t\t};\r\n\t\tfetchCountries();\r\n\t}, [setFetchedCountries]);\r\n\treturn (\r\n\t\t<FormControl className={styles.formControl}>\r\n\t\t\t<NativeSelect defaultValue=\"\" onChange={(event) => onCountryChange(event.target.value)}>\r\n\t\t\t\t<option value=\"\">Global</option>\r\n\t\t\t\t{fetchedCountries.map((country, i) => (\r\n\t\t\t\t\t<option value={country} key={i}>\r\n\t\t\t\t\t\t{country}\r\n\t\t\t\t\t</option>\r\n\t\t\t\t))}\r\n\t\t\t</NativeSelect>\r\n\t\t</FormControl>\r\n\t);\r\n};\r\n\r\nexport default CountryPicker;\r\n","export default __webpack_public_path__ + \"static/media/covid.9e5d4fc7.png\";","import React, { Component } from 'react';\r\n\r\nimport { Cards, Chart, CountryPicker } from './components';\r\nimport styles from './App.module.css'\r\nimport { fetchData } from './api';\r\nimport covidImage from './images/covid.png'\r\n\r\nexport default class App extends Component {\r\n\r\n    state = {\r\n        covidData: {},\r\n        country: ''\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const data = await fetchData();\r\n        this.setState({ covidData: data });\r\n    }\r\n\r\n\r\n    onCountryChange = async (country) => {\r\n        const data = await fetchData(country);\r\n        this.setState({ covidData: data, country });\r\n    }\r\n\r\n    render() {\r\n        const { covidData, country } = this.state;\r\n        return (\r\n            <div className={styles.container}>\r\n                <img className={styles.image} alt=\"COVID-19\" src={covidImage} />\r\n                <Cards data={covidData} country={country} />\r\n                <CountryPicker onCountryChange={this.onCountryChange} />\r\n                <Chart data={covidData} country={country} />\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById('root')\r\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__2CGy0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__KRWKu\",\"image\":\"App_image__3rDIm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__1OC_X\"};"],"sourceRoot":""}